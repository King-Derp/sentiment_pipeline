services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15-oss
    container_name: timescaledb_service
    ports:
      - "${PG_PORT_HOST}:${PG_PORT_CONTAINER}" # e.g., 5433:5432, defined in .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - sentiment_net
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB} -h localhost -p ${PG_PORT_CONTAINER}"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s

  reddit_scraper:
    build:
      context: .
      dockerfile: ./reddit_scraper/Dockerfile
    container_name: reddit_scraper_service
    depends_on:
      timescaledb:
        condition: service_healthy # Or simply service_started if healthcheck not defined for timescaledb
    env_file:
      - ./scraper.env # Ensure this file is created from scraper.env.example
    volumes:
      - ./reddit_scraper:/app/reddit_scraper # Mounts the host's reddit_scraper dir to /app/reddit_scraper
      - ./reddit_scraper/config.yaml:/app/config.yaml # Explicitly mount config.yaml
      - ./scraper_logs:/app/logs
      - ./data:/app/data  # Persist CSV data on host
    networks:
      - sentiment_net
    # The Dockerfile's ENTRYPOINT and CMD will be used unless overridden here

  sentiment_analyzer:
    build:
      context: .
      dockerfile: ./sentiment_analyzer/Dockerfile
      args:
        USE_GPU: ${USE_GPU:-true}
    container_name: sentiment_analyzer_api
    ports:
      - "${SENTIMENT_API_PORT:-8001}:8001"
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      # Database Configuration
      - PG_HOST=timescaledb_service
      - PG_PORT=5432
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - DATABASE_URL=postgresql+asyncpg://${PG_USER}:${PG_PASSWORD}@timescaledb_service:5432/${PG_DB}
      - ALEMBIC_DATABASE_URL=postgresql+psycopg://${PG_USER}:${PG_PASSWORD}@timescaledb_service:5432/${PG_DB}
      
      # API Configuration
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8001}
      - WORKERS=${WORKERS:-1}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEBUG=${DEBUG:-true}
      
      # Security Settings
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,sentiment_analyzer,sentiment_analyzer_api}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS:-true}
      - CORS_ALLOW_METHODS=${CORS_ALLOW_METHODS:-GET,POST,PUT,DELETE,OPTIONS}
      - CORS_ALLOW_HEADERS=${CORS_ALLOW_HEADERS:-*}
      
      # PowerBI Integration
      - POWERBI_PUSH_URL=${POWERBI_PUSH_URL:-}
      - POWERBI_API_KEY=${POWERBI_API_KEY:-}
      
      # ML Model Configuration
      - USE_GPU_IF_AVAILABLE=${USE_GPU_IF_AVAILABLE:-true}
      - MODEL_CACHE_DIR=${MODEL_CACHE_DIR:-/app/models}
      - HF_HOME=/app/models/transformers_cache
      - HUGGINGFACE_MODEL_NAME=${HUGGINGFACE_MODEL_NAME:-cardiffnlp/twitter-roberta-base-sentiment-latest}
      - SPACY_MODEL_NAME=${SPACY_MODEL_NAME:-en_core_web_lg}
      - USE_GPU=${USE_GPU:-true}
      
      # GPU Runtime (when enabled)
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - sentiment_model_cache:/root/.cache/huggingface
    networks:
      - sentiment_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    # GPU support - using standard runtime with device requests
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  dashboard_service:
    build:
      context: .
      dockerfile: ./dashboard_service/Dockerfile
    container_name: dashboard_service_app
    ports:
      - "${DASHBOARD_PORT:-8503}:8501"
    depends_on:
      sentiment_analyzer:
        condition: service_healthy
    environment:
      # Dashboard Configuration
      - SENTIMENT_API_BASE_URL=http://sentiment_analyzer:8001
      - SENTIMENT_API_TIMEOUT=30
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    networks:
      - sentiment_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

volumes:
  timescaledb_data:
  sentiment_model_cache:

networks:
  sentiment_net:
    driver: bridge
