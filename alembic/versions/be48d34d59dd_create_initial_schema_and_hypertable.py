"""create_initial_schema_and_hypertable

Revision ID: be48d34d59dd
Revises: 
Create Date: 2025-05-23 16:05:48.984370

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'be48d34d59dd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('raw_submissions',
    sa.Column('id', sa.String(), nullable=False, comment='Reddit base36 ID'),
    sa.Column('created_utc', sa.BigInteger(), nullable=False, comment='Unix epoch timestamp of creation'),
    sa.Column('subreddit', sa.String(), nullable=False, comment='Subreddit name, lowercase'),
    sa.Column('title', sa.Text(), nullable=False, comment='Submission title, UTF-8'),
    sa.Column('selftext', sa.Text(), nullable=True, comment='Submission self-text, may be empty'),
    sa.Column('author', sa.String(), nullable=False, comment="Reddit username of the author, or '[deleted]'"),
    sa.Column('score', sa.Integer(), nullable=False, comment='Submission score (upvotes - downvotes)'),
    sa.Column('upvote_ratio', sa.Float(), nullable=True, comment='Upvote ratio (0.0 to 1.0)'),
    sa.Column('num_comments', sa.Integer(), nullable=False, comment='Number of comments at the time of scrape'),
    sa.Column('url', sa.String(), nullable=False, comment='URL of the submission'),
    sa.Column('flair_text', sa.String(), nullable=True, comment='Flair text, if any'),
    sa.Column('over_18', sa.Boolean(), nullable=False, comment='NSFW (Not Safe For Work) flag'),
    sa.PrimaryKeyConstraint('id', 'created_utc', name='pk_submission_id_created_utc')
    )
    op.create_index(op.f('ix_raw_submissions_created_utc'), 'raw_submissions', ['created_utc'], unique=False)
    op.create_index(op.f('ix_raw_submissions_id'), 'raw_submissions', ['id'], unique=False)
    op.create_index(op.f('ix_raw_submissions_subreddit'), 'raw_submissions', ['subreddit'], unique=False)
    op.create_index('ix_raw_submissions_subreddit_created_utc', 'raw_submissions', ['subreddit', 'created_utc'], unique=False)
    # ### end Alembic commands ###

    # --- TimescaleDB specific commands ---
    op.execute("CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;")
    op.execute("SELECT create_hypertable('raw_submissions', 'created_utc', if_not_exists => TRUE, chunk_time_interval => 604800);")
    # Note: chunk_time_interval can be adjusted based on expected data volume and query patterns.
    # Using 604800 (7 days in seconds) as 'created_utc' is a BigInteger (Unix timestamp).


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Note: Dropping the TimescaleDB extension is typically not done in a downgrade
    # if other hypertables or TimescaleDB features are in use or might be in the future.
    # The hypertable nature of 'raw_submissions' will be removed when the table itself is dropped.
    # If absolutely necessary and 'raw_submissions' is the ONLY user of timescaledb:
    # op.execute("DROP EXTENSION IF EXISTS timescaledb;")

    op.drop_index('ix_raw_submissions_subreddit_created_utc', table_name='raw_submissions')
    op.drop_index(op.f('ix_raw_submissions_subreddit'), table_name='raw_submissions')
    op.drop_index(op.f('ix_raw_submissions_id'), table_name='raw_submissions')
    op.drop_index(op.f('ix_raw_submissions_created_utc'), table_name='raw_submissions')
    op.drop_table('raw_submissions')
    # ### end Alembic commands ###
