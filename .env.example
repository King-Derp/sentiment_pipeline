# .env - Database and Application Configuration

# TimescaleDB Connection Details
# Service name in docker-compose for other containers
PG_HOST=timescaledb_service
# For local connections if accessing directly (e.g., from host machine)
PG_HOST_LOCAL=localhost
# Host port mapped in docker-compose (e.g., localhost:5433)    
PG_PORT_HOST=5433
# Port inside the TimescaleDB container (usually 5432)        
PG_PORT_CONTAINER=5432      
PG_USER=
PG_PASSWORD=
PG_DB=sentiment_pipeline_db

# SQLAlchemy Database URLs
# Used by services (like scrapers) connecting to the DB via Docker network
DATABASE_URL=postgresql://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT_CONTAINER}/${PG_DB}

# Used by Alembic or local scripts connecting to the DB via host-mapped port
DATABASE_URL_LOCAL=postgresql://${PG_USER}:${PG_PASSWORD}@${PG_HOST_LOCAL}:${PG_PORT_HOST}/${PG_DB}

# Async URL for anything that uses SQLAlchemy AsyncEngine
DATABASE_URL_ASYNC=postgresql+asyncpg://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT_CONTAINER}/${PG_DB}

# Sentiment Analyzer Settings
# Model names can be overridden to use smaller or custom models
SPACY_MODEL_NAME=en_core_web_lg
FINBERT_MODEL_NAME=ProsusAI/finbert
USE_GPU_IF_AVAILABLE=true
# Batch processing
EVENT_FETCH_INTERVAL_SECONDS=60
EVENT_FETCH_BATCH_SIZE=100
# Logging
LOGGING_CONFIG_PATH=config/logging_config.yaml
# Preprocessor
PREPROCESSOR_TARGET_LANGUAGE=en
# Pipeline
PIPELINE_RUN_INTERVAL_SECONDS=60

# Sentiment Analyzer API Configuration
# API Server Settings
SENTIMENT_API_PORT=8001
HOST=0.0.0.0
PORT=8001
WORKERS=1
LOG_LEVEL=info
DEBUG=false

# Security Settings
ALLOWED_HOSTS=localhost,127.0.0.1
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOW_HEADERS=*

# Rate Limiting (requests per minute)
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# ML Model Configuration
HUGGINGFACE_MODEL_NAME=cardiffnlp/twitter-roberta-base-sentiment-latest
SPACY_MODEL_NAME=en_core_web_lg

# GPU Configuration (set to true to enable GPU support)
USE_GPU=false
NVIDIA_VISIBLE_DEVICES=all
NVIDIA_DRIVER_CAPABILITIES=compute,utility

# GPU Resource Limits (only used when USE_GPU=true)
GPU_COUNT=1
GPU_MEMORY_LIMIT=8G
GPU_CPU_LIMIT=4.0
GPU_MEMORY_RESERVATION=4G
GPU_CPU_RESERVATION=2.0

# Power BI Integration
POWERBI_PUSH_URL=
POWERBI_API_KEY=
# Example: POWERBI_PUSH_URL=https://api.powerbi.com/beta/your-workspace/datasets/your-dataset/rows?key=your-key
# Example: POWERBI_API_KEY=your_optional_api_key_here
